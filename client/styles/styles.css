html {
  min-height: 100%;
}

.text-center {
  text-align: center; }

.full {
  overflow-y: hidden;
  font-family: "Segoe UI", "Open Sans", sans-serif, serif;
  font-size: 0.875rem;
  line-height: 1.1;
  font-weight: 400;
  font-style: normal;
}
.red {
  color: red; }

.lb {
  color: lightblue; }

dialog {
  border: 1px solid rgba(0, 0, 0, 0.3);
  border-radius: 6px;
  box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3);
  width: auto !important; }

dialog::backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.8); }

[data-required] label:after {
  content: "*";
  color: red; }

body {
  height: 100%;
  font-size: 14px;
  -moz-perspective: 1000;
  -webkit-perspective: 1000;
  perspective: 1000;
  /*top: -15px;
  bottom: -15px;
  left: -15px;
  right: -15px;*/
  z-index: 2;
  overflow: hidden;
  /*-webkit-filter: blur(3px);
  filter: blur(3px);*/
}

.tv {
  background: no-repeat center/cover url("/bg.jpg");
}

.disable {
  cursor: no-drop;
}

video#backgroundvid {  position: fixed; right: 0; bottom: 0; min-width: 100%; min-height: 100%; width: auto; height: auto; z-index: -100; background: url(polina.jpg) no-repeat; background-size: cover;  }

.fade {
  -webkit-transition:1500ms ease;
  -moz-transition:1500ms ease;
  -o-transition:1500ms ease;
  transition:1500ms ease;
}

.fade.hide {
  visibility:hidden;
  opacity:0;
  filter:alpha(opacity=0);
}

.fade.show {
  visibility:visible;
  opacity:1;
  filter:alpha(opacity=100);
}

.sk-double-bounce {
  width: 400px;
  height: 400px;
  position: relative;
  margin: 40px auto; }
.sk-double-bounce .sk-child {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #333;
  opacity: 0.6;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-animation: sk-doubleBounce 2s infinite ease-in-out;
          animation: sk-doubleBounce 2s infinite ease-in-out; }
.sk-double-bounce .sk-double-bounce2 {
  -webkit-animation-delay: -1.0s;
          animation-delay: -1.0s; }
@-webkit-keyframes sk-doubleBounce {
  0%, 100% {
    -webkit-transform: scale(0);
            transform: scale(0); }
  50% {
    -webkit-transform: scale(1);
            transform: scale(1); } }
@keyframes sk-doubleBounce {
  0%, 100% {
    -webkit-transform: scale(0);
            transform: scale(0); }
  50% {
    -webkit-transform: scale(1);
            transform: scale(1); } }

.vertical-center {
  min-height: 100%;  /* Fallback for vh unit */
  min-height: 100vh; /* You might also want to use
                        'height' property instead.

                        Note that for percentage values of
                        'height' or 'min-height' properties,
                        the 'height' of the parent element
                        should be specified explicitly.

                        In this case the parent of '.vertical-center'
                        is the <body> element */

  /* Make it a flex container */
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;

  /* Align the bootstrap's container vertically */
    -webkit-box-align : center;
  -webkit-align-items : center;
       -moz-box-align : center;
       -ms-flex-align : center;
          align-items : center;

  /* In legacy web browsers such as Firefox 9
     we need to specify the width of the flex container */
  width: 100%;

  /* Also 'margin: 0 auto' doesn't have any effect on flex items in such web browsers
     hence the bootstrap's container won't be aligned to the center anymore.

     Therefore, we should use the following declarations to get it centered again */
         -webkit-box-pack : center;
            -moz-box-pack : center;
            -ms-flex-pack : center;
  -webkit-justify-content : center;
          justify-content : center;
}
